// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require('SquareVerifier');
const SquareProof = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {
    const owner = accounts[0];
    
    // - use the contents from proof.json generated from zokrates steps
    describe('Test verification with correct proof', () => {
        beforeEach(async () => {
            this.contract = await SquareVerifier.new({from: owner});
        })

        // Test verification with correct proof
        it('Verificatons with correct proof succeeds', async () => {
            const verificationStatus = await this.contract.verifyTx(SquareProof.proof.a, SquareProof.proof.b, SquareProof.proof.c, SquareProof.inputs);
            assert.equal(verificationStatus, true, "Verification failed");
        })

        // Test verification with incorrect proof
        it('Verificatons with incorrect proof succeeds', async () => {
            SquareProof.inputs=[1, 2];
            const verificationStatus = await this.contract.verifyTx(SquareProof.proof.a, SquareProof.proof.b, SquareProof.proof.c, SquareProof.inputs);
            assert.equal(verificationStatus, false, "Incorrect inputs verified");
        })
    })
})
